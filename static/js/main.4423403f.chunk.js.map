{"version":3,"sources":["theme/colors.scss","components/SoftKey/SoftKey.tsx","components/SoftKey/SoftKeyProvider.tsx","components/SoftKey/withSoftKeyManager.tsx","components/CheckboxListItem/CheckboxListItem.tsx","components/Toast/Toast.tsx","contexts/toastContext.tsx","services/taskService.js","views/ListView/ListView.tsx","components/Tabs/Tabs.tsx","components/Tab/Tab.tsx","views/TabView/TabView.tsx","services/helperFunctions.js","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","defaultFocusColor","headerPurple","headerPink","headerLime","headerCyan","headerBlue","headerOrange","headerRed","darkBlue","turquoise","darkOrange","orange","yellow","violet","carrotOrange","watTheBlue","gold","purple","pink","lime","cyan","red","warning","destructive","preferred","black","grayscale90","grayscale70","grayscale45","grayscale20","grayscale10","white","Button","props","renderedIcon","handleClick","icon","text","id","React","isValidElement","toString","indexOf","react_default","a","createElement","src","width","height","className","concat","onClick","e","preventDefault","onFocus","relatedTarget","focus","currentTarget","blur","data-icon","undefined","SoftKey","memo","leftCallback","rightCallback","centerCallback","leftText","rightText","centerText","leftIcon","centerIcon","rightIcon","handleKeyDown","useCallback","key","useEffect","document","addEventListener","removeEventListener","SoftKey_Button","pos","SoftKeyContext","createContext","SoftKeyProvider","_React$PureComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setLeftCallback","setState","setRightCallback","setCenterCallback","setLeftText","setRightText","setCenterText","setCenterIcon","setLeftIcon","setRightIcon","setSoftKeyTexts","_ref","_ref$leftText","_ref$centerText","_ref$rightText","setSoftKeyCallbacks","_ref2","_ref2$leftCallback","_ref2$centerCallback","_ref2$rightCallback","unregisterSoftKeys","state","inherits","createClass","value","context","Provider","children","components_SoftKey_SoftKey","PureComponent","SoftKeyConsumer","Consumer","CheckboxListItem","primary","secondary","initCheckboxVal","onInputChange","checkboxSide","focusColor","onFocusChange","index","forwardedRef","softKeyManager","softKeyCheckedText","softKeyUncheckedText","softKeyCheckedIcon","softKeyUncheckedIcon","_useState","useState","_useState2","slicedToArray","isChecked","setChecked","_useState3","_useState4","isFocused","setFocused","boxCls","lineCls","primaryCls","secondaryCls","inputCls","handleInvertCheck","wasChecked","handleFocusChange","isNowFocused","checkbox","tabIndex","type","checked","target","style","backgroundColor","colors","ref","onBlur","forwardRef","withSoftKeyManager_SoftKeyConsumer","CheckboxListItem_CheckboxListItem","assign","Toast","isDisplayed","itemCls","classnames","isProcessingQueue","toastQueue","ToastContext","ToastContextProvider","setText","setIsDisplayed","showToast","duration","push","processQueue","length","toastData","shift","setTimeout","components_Toast_Toast","taskService","Promise","resolve","reject","window","gapi","client","load","listTaskLists","list","all","items","map","title","res","request","tasks","tasklists","makeRequest","taskListId","get","tasklist","requestObj","execute","resp","error","result","ListView","itemRefs","activeItem","setActiveItem","onChangeIndex","isActive","handleChangeIndex","itemIndex","setFocusToIndex","elem","ReactDOM","findDOMNode","current","classNames","Children","child","separatorText","newRef","createRef","cloneElement","renderChildren","Tabs","childRefs","activeChild","setActiveChild","handleTabChange","childIndex","scrollIntoView","behavior","block","inline","handleKeyUp","Math","min","count","max","i","childRef","useRef","onTabChange","Tab","label","actPrefixCls","--tab-underline-color","Tab_Tab","TabView","tabLabels","activeTab","setActiveTab","isTransitionDone","setTransitionDone","tabViewTabs","tabViewContent","components_Tabs_Tabs","components_Tab_Tab","lib_default","axis","onTransitionEnd","disabled","isLocalhost","Boolean","location","hostname","match","App","setSignedIn","taskList","setTaskList","_useGoogleLogin","useGoogleLogin","clientId","config","client_id","onSuccess","_onSuccess","asyncToGenerator","regenerator_default","mark","_callee","rep","wrap","_context","prev","next","console","log","init","getAllTaskList","sent","stop","_x","apply","arguments","isSignedIn","redirectUri","onFailure","uxMode","scope","signIn","loaded","toastContext_ToastContextProvider","SoftKeyProvider_SoftKeyProvider","views_TabView_TabView","views_ListView_ListView","components_CheckboxListItem_CheckboxListItem","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4423403f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultFocusColor\":\"var(--color-purple)\",\"headerPurple\":\"var(--header-purple-background)\",\"headerPink\":\"var(--header-pink-background)\",\"headerLime\":\"var(--header-lime-background)\",\"headerCyan\":\"var(--header-cyan-background)\",\"headerBlue\":\"var(--header-blue-background)\",\"headerOrange\":\"var(--header-orange-background)\",\"headerRed\":\"var(--header-red-background)\",\"darkBlue\":\"var(--color-darkblue)\",\"turquoise\":\"var(--color-turquoise)\",\"darkOrange\":\"var(--color-darkorange)\",\"orange\":\"var(--color-orange)\",\"yellow\":\"var(--color-yellow)\",\"violet\":\"var(--color-violet)\",\"carrotOrange\":\"var(--color-carrotorange)\",\"watTheBlue\":\"var(--color-wathetblue)\",\"gold\":\"var(--color-gold)\",\"purple\":\"var(--color-purple)\",\"pink\":\"var(--color-pink)\",\"lime\":\"var(--color-lime)\",\"cyan\":\"var(--color-cyan)\",\"red\":\"var(--color-red)\",\"warning\":\"var(--color-warning)\",\"destructive\":\"var(--color-destructive)\",\"preferred\":\"var(--color-preferred)\",\"black\":\"var(--color-gs100)\",\"grayscale90\":\"var(--color-gs90)\",\"grayscale70\":\"var(--color-gs70)\",\"grayscale45\":\"var(--color-gs45)\",\"grayscale20\":\"var(--color-gs20)\",\"grayscale10\":\"var(--color-gs10)\",\"white\":\"var(--color-gs00)\"};","import React, { useCallback, useEffect } from 'react';\n\nimport './SoftKey.scss';\n\nconst prefixCls = 'kai-softkey';\n\nconst Button = props => {\n  const { handleClick, icon, text, id } = props;\n\n  const handleButtonClick = e => {\n    e.preventDefault();\n    if(handleClick) {\n      handleClick();\n    }\n  };\n\n  // We want to avoid losing focus on the parent element\n  const handleCheckFocus = e => {\n    e.preventDefault();\n    if (e.relatedTarget) {\n      // Revert focus back to previous blurring element\n      e.relatedTarget.focus();\n    } else {\n      // No previous focus target, blur instead\n      e.currentTarget.blur();\n    }\n  };\n\n  let renderedIcon:any|undefined;\n  if(icon){\n    if(React.isValidElement(icon)) {\n      renderedIcon = icon;\n    }\n    else if(icon.toString().indexOf(\"kai-\") === -1) {\n      renderedIcon = <img src={icon} width={20} height={20}/>\n    }\n    else {\n      renderedIcon = <span className={icon} />;\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      className={`${prefixCls}-btn`}\n      onClick={handleButtonClick}\n      onFocus={handleCheckFocus}\n      data-icon={renderedIcon ? \"true\" : undefined}\n    >\n      {renderedIcon}\n      {text}\n    </button>\n  );\n};\n\ninterface SoftKeyProps {\n  leftText?: string | null,\n  centerText?: string | null,\n  rightText?: string | null,\n  centerIcon?: any | null,\n  leftIcon?: any | null,\n  rightIcon?: any | null,\n  leftCallback?: () => void,\n  centerCallback?: () => void,\n  rightCallback?: () => void,\n}\n\nconst SoftKey = React.memo<SoftKeyProps>(props => {\n  const {\n    leftCallback,\n    rightCallback,\n    centerCallback,\n    leftText,\n    rightText,\n    centerText,\n    leftIcon,\n    centerIcon,\n    rightIcon,\n  } = props;\n\n  const handleKeyDown = useCallback(\n    e => {\n      switch (e.key) {\n        case 'SoftLeft':\n          if(leftCallback) {\n            leftCallback();\n          }\n          break;\n        case 'SoftRight':\n          if(rightCallback) {\n            rightCallback();\n          }\n          break;\n        case 'Enter':\n          // Action case press center key\n          if(centerCallback) {\n            centerCallback();\n          }\n          break;\n        default:\n          break;\n      }\n    },\n    [leftCallback, rightCallback, centerCallback]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className={`${prefixCls} visible`}>\n      <Button \n        id=\"leftSoftKey\"\n        pos=\"left\" \n        text={leftText} \n        icon={leftIcon} \n        handleClick={leftCallback} />\n      <Button\n        id=\"centerSoftKey\"\n        pos=\"center\"\n        text={centerText}\n        icon={centerIcon}\n        handleClick={centerCallback}\n      />\n      <Button \n        id=\"rightSoftKey\"\n        pos=\"right\" \n        text={rightText} \n        icon={rightIcon} \n        handleClick={rightCallback} />\n    </div>\n  );\n});\n\nexport default SoftKey;\n","import React from 'react';\nimport SoftKey from './SoftKey';\n\ninterface LocalProps {\n  className?:string\n}\n\ninterface LocalState {\n  leftText: string | null,\n  centerText: string | null,\n  rightText: string | null,\n  centerIcon: any | null,\n  leftIcon: any | null,\n  rightIcon: any | null,\n  leftCallback?: () => void,\n  centerCallback: () => void,\n  rightCallback: () => void,\n}\n\nexport const SoftKeyContext = React.createContext<SoftKeyContextProps|undefined>(undefined);\nexport interface SoftKeyContextProps {\n  setLeftCallback: (leftCallback: () => void) => void,\n  setRightCallback: (rightCallback: () => void) => void,\n  setCenterCallback: (centerCallback: () => void) => void,\n  setLeftText: (leftText: any) => void,\n  setRightText: (rightText: any) => void,\n  setCenterText: (centerText: any) => void,\n  setLeftIcon: (leftIcon: any) => void,\n  setCenterIcon: (centerIcon: any) => void,\n  setRightIcon: (rightIcon: any) => void,\n  setSoftKeyTexts: ({ leftText, centerText, rightText }: {\n      leftText?: string | undefined;\n      centerText?: string | undefined;\n      rightText?: string | undefined;\n  }) => void,\n  setSoftKeyCallbacks: ({ leftCallback, centerCallback, rightCallback, }: {\n    leftCallback?: (() => void) | undefined;\n    centerCallback?: (() => void) | undefined;\n    rightCallback?: (() => void) | undefined;\n}) => void,\n  unregisterSoftKeys: () => void\n}\n\nexport class SoftKeyProvider extends React.PureComponent<LocalProps, LocalState> {\n\n  constructor(props: LocalProps){\n    super(props);\n\n    this.state = {\n      leftText: '',\n      centerText: '',\n      rightText: '',\n      centerIcon: null,\n      leftIcon: null,\n      rightIcon: null,\n      leftCallback: () => {},\n      centerCallback: () => {},\n      rightCallback: () => {},\n    };  \n  }\n\n  setLeftCallback = (leftCallback: () => void) => {\n    this.setState({ leftCallback });\n  };\n\n  setRightCallback = (rightCallback: () => void) => {\n    this.setState({ rightCallback });\n  };\n\n  setCenterCallback = (centerCallback: () => void) => {\n    this.setState({ centerCallback });\n  };\n\n  setLeftText = leftText => {\n    this.setState({ leftText, leftIcon: null });\n  };\n\n  setRightText = rightText => {\n    this.setState({ rightText, rightIcon: null });\n  };\n\n  setCenterText = centerText => {\n    this.setState({ centerText, centerIcon: null });\n  };\n\n  setCenterIcon = centerIcon => {\n    this.setState({ centerIcon, centerText: null });\n  };\n\n  setLeftIcon = leftIcon => {\n    this.setState({ leftIcon, leftText: null });\n  };\n\n  setRightIcon = rightIcon => {\n    this.setState({ rightIcon, rightText: null });\n  };\n\n  // Shortcuts for convenience\n\n  setSoftKeyTexts = ({ leftText = '', centerText = '', rightText = '' }) => {\n    this.setState({ leftText, centerText, rightText });\n  };\n\n  setSoftKeyCallbacks = ({\n    leftCallback = () => {},\n    centerCallback = () => {},\n    rightCallback = () => {},\n  }) => {\n    this.setState({ leftCallback, centerCallback, rightCallback });\n  };\n\n  unregisterSoftKeys = () => {\n    this.setState({\n      leftCallback: () => {},\n      centerCallback: () => {},\n      rightCallback: () => {},\n      leftText: null,\n      rightText: null,\n      centerText: null,\n      centerIcon: null,\n    });\n  };\n\n  render() {\n    const context: SoftKeyContextProps = {\n      setLeftCallback: this.setLeftCallback,\n      setRightCallback: this.setRightCallback,\n      setCenterCallback: this.setCenterCallback,\n      setLeftText: this.setLeftText,\n      setRightText: this.setRightText,\n      setCenterText: this.setCenterText,\n      setLeftIcon: this.setLeftIcon,\n      setCenterIcon: this.setCenterIcon,\n      setRightIcon: this.setRightIcon,\n      setSoftKeyTexts: this.setSoftKeyTexts,\n      setSoftKeyCallbacks: this.setSoftKeyCallbacks,\n      unregisterSoftKeys: this.unregisterSoftKeys\n    };\n\n    return (\n      <SoftKeyContext.Provider value={context}>\n        {this.props.children}\n        <footer className={this.props.className || ''}>\n          <SoftKey\n            leftText={this.state.leftText}\n            leftIcon={this.state.leftIcon}\n            centerText={this.state.centerText}\n            centerIcon={this.state.centerIcon}\n            rightIcon={this.state.rightIcon}\n            rightText={this.state.rightText}\n            leftCallback={this.state.leftCallback}\n            centerCallback={this.state.centerCallback}\n            rightCallback={this.state.rightCallback}\n          />\n        </footer>\n      </SoftKeyContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { SoftKeyContext, SoftKeyContextProps } from './SoftKeyProvider';\n\nexport interface SoftKeyManagerProps{\n  softKeyManager: SoftKeyContextProps\n}\n\nexport const SoftKeyConsumer = ({ children }) => (\n  <SoftKeyContext.Consumer>\n    {context => children(context)}\n  </SoftKeyContext.Consumer>\n);\n\nexport const withSoftKeyManager = Comp => props => (\n  <SoftKeyConsumer>\n    {context => <Comp softKeyManager={context} {...props} />}\n  </SoftKeyConsumer>\n);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport colors from '../../theme/colors.scss';\nimport { SoftKeyConsumer } from '../SoftKey/withSoftKeyManager';\nimport './CheckboxListItem.scss';\nimport { SoftKeyContextProps } from '../SoftKey/SoftKeyProvider';\n\nconst prefixCls = 'kai-cbl';\n\ninterface LocalProps {\n  id?:string;\n  primary: string;\n  secondary?:string;\n  initCheckboxVal?:boolean;\n  onInputChange?: (checked: any) => void;\n  checkboxSide?: \"left\" | \"right\";\n  focusColor?:string;\n  onFocusChange?: (index: number) => void;\n  index?: number;\n  forwardedRef?:any;\n  softKeyManager?: SoftKeyContextProps;\n  softKeyCheckedText?:string;\n  softKeyUncheckedText?:string;\n  softKeyCheckedIcon?: any;\n  softKeyUncheckedIcon?: any;\n}\n\nconst CheckboxListItem = React.memo<LocalProps>(props => {\n  const {\n    id,\n    primary,\n    secondary,\n    initCheckboxVal,\n    onInputChange,\n    checkboxSide,\n    focusColor,\n    onFocusChange,\n    index,\n    forwardedRef,\n    softKeyManager,\n    softKeyCheckedText,\n    softKeyUncheckedText,\n    softKeyCheckedIcon,\n    softKeyUncheckedIcon,\n  } = props;\n\n  // Managed vs self-managed radio buttons\n  const [isChecked, setChecked] = useState(initCheckboxVal);\n  const [isFocused, setFocused] = useState(false);\n\n  const itemCls = prefixCls;\n  const boxCls = `${prefixCls}-box`;\n  const lineCls = `${prefixCls}-line ${\n    checkboxSide === 'left' ? 'right' : 'left'\n  }`;\n  const primaryCls = `${prefixCls}-primary`;\n  const secondaryCls = `${prefixCls}-secondary ${secondary ? '' : 'hidden'}`;\n  const inputCls = `${boxCls}-input-${isFocused ? 'focused' : 'unfocused'}`;\n\n  useEffect(() => {\n    const centerText = isChecked ? softKeyCheckedText : softKeyUncheckedText;\n    const centerIcon = isChecked ? softKeyCheckedIcon : softKeyUncheckedIcon;\n    if (isFocused) {\n      if (centerIcon != null) {\n        softKeyManager.setCenterIcon(centerIcon);\n      } else {\n        softKeyManager.setCenterText(centerText);\n      }\n    }\n  }, [\n    isFocused,\n    isChecked,\n    softKeyManager,\n    softKeyCheckedText,\n    softKeyUncheckedText,\n    softKeyCheckedIcon,\n    softKeyUncheckedIcon,\n  ]);\n\n  const handleInvertCheck = () => setChecked(wasChecked => !wasChecked);\n\n  const handleInputChange = (e) => {\n    setChecked(e.target.checked);\n    if(onInputChange) {\n      onInputChange(e.target.checked);\n    }\n  };\n\n  // We want to avoid losing focus on the parent element\n  const handleCheckFocus = e => {\n    e.preventDefault();\n    if (e.relatedTarget) {\n      // Revert focus back to previous blurring element\n      e.relatedTarget.focus();\n    } else {\n      // No previous focus target, blur instead\n      e.currentTarget.blur();\n    }\n  };\n\n  const handleFocusChange = useCallback(\n    isNowFocused => {\n      setFocused(isNowFocused);\n      if (isNowFocused) {\n        const centerText = isChecked\n          ? softKeyCheckedText\n          : softKeyUncheckedText;\n        const centerIcon = isChecked\n          ? softKeyCheckedIcon\n          : softKeyUncheckedIcon;\n        if (centerIcon != null) {\n          softKeyManager.setCenterIcon(centerIcon);\n        } else {\n          softKeyManager.setCenterText(centerText);\n        }\n        softKeyManager.setCenterCallback(handleInvertCheck);\n        onFocusChange(index);\n      }\n    },\n    [\n      index,\n      onFocusChange,\n      isChecked,\n      softKeyCheckedText,\n      softKeyUncheckedText,\n      softKeyCheckedIcon,\n      softKeyUncheckedIcon,\n      softKeyManager,\n    ]\n  );\n\n  const checkbox = (\n    <div className={boxCls}>\n      <input\n        id={id}\n        className={inputCls}\n        tabIndex={-1}\n        type=\"checkbox\"\n        checked={isChecked}\n        onFocus={handleCheckFocus}\n        onClick={handleInputChange}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      tabIndex={0}\n      className={itemCls}\n      style={{ backgroundColor: isFocused ? (focusColor || colors.defaultFocusColor) : colors.white }}\n      ref={forwardedRef}\n      onFocus={() => handleFocusChange(true)}\n      onBlur={() => handleFocusChange(false)}\n    >\n      {checkboxSide === 'left' || checkboxSide === undefined ? checkbox : null}\n      <div className={lineCls}>\n        <span className={primaryCls}>{primary}</span>\n        <label className={secondaryCls}>{secondary}</label>\n      </div>\n      {checkboxSide === 'right' ? checkbox : null}\n    </div>\n  );\n});\n\nexport default React.forwardRef((props: LocalProps, ref) => (\n  <SoftKeyConsumer>\n    {context => (\n      <CheckboxListItem\n        softKeyManager={context}\n        forwardedRef={ref}\n        {...props}\n      />\n    )}\n  </SoftKeyConsumer>\n));\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Toast.scss';\n\nconst Toast = ({ text, isDisplayed }) => {\n  const prefixCls = 'kai-toast';  \n  const itemCls = classnames(\n      prefixCls,\n      isDisplayed && `${prefixCls}--displayed`,\n  );\n\n  return (\n    <h1 className={itemCls}>{text}</h1>\n  )\n};\n\nexport default Toast;","import React, { useState } from 'react';\nimport Toast from '../components/Toast/Toast';\n\nexport interface ToastMessage {\n    text: string;\n    duration: number;\n}\nlet isProcessingQueue = false;\nconst toastQueue: ToastMessage[] = [];\n\nexport interface ToastContextProps{\n    showToast: (text, duration) => void,\n}\n\nconst ToastContext = React.createContext<ToastContextProps|undefined>(undefined);\n\nconst ToastContextProvider = ({ children }) => {\n  const [text, setText] = useState('');\n  const [isDisplayed, setIsDisplayed] = useState(false);\n\n  const processQueue = () => {\n    if (toastQueue.length === 0) {\n      isProcessingQueue = false;\n      return;\n    }\n    isProcessingQueue = true;\n    const toastData = toastQueue.shift();\n    if(toastData){\n        setText(toastData.text);\n        setIsDisplayed(true)\n        setTimeout(() => {\n        setIsDisplayed(false);\n        // Wait for the closing animation before processing next toast\n        setTimeout(() => {\n            processQueue();\n        }, 300);\n        }, toastData.duration || 5000)\n    }\n  }\n    \n  const showToast = (text, duration) => {\n    toastQueue.push({ text, duration });\n    !isProcessingQueue && processQueue();\n  };\n\n  return (\n    <ToastContext.Provider value={{ showToast }}>\n      <Toast text={text} isDisplayed={isDisplayed} />\n      {children}\n    </ToastContext.Provider>\n  )\n}\n\nconst withToast = (Component:any) => (props:any) => (\n    <ToastContext.Consumer>\n      {toastProps => <Component {...props} \n                        {...toastProps}\n                    />}\n    </ToastContext.Consumer>\n  );\n  \n\nexport default ToastContext;\nexport { ToastContextProvider, withToast };","class TaskService {\r\n\r\n    init() {\r\n        return new Promise((resolve, reject) => {\r\n            return window.gapi.client.load('tasks', 'v1', () =>\r\n                window.gapi.client.load('plus', 'v1', () => resolve()));\r\n        });\r\n    }\r\n\r\n    async getAllTaskList() {\r\n        let list = await this.listTaskLists()\r\n        let res = await Promise.all(list.items.map(list => list.title))\r\n        return res\r\n    }\r\n\r\n    listTaskLists() {\r\n        const request = window.gapi.client.tasks.tasklists.list();\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n    showTaskList(taskListId) {\r\n        const request = window.gapi.client.tasks.tasklists.get({ tasklist: taskListId });\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    listTasks(taskListId) {\r\n        const request = window.gapi.client.tasks.tasks.list({\r\n            tasklist: taskListId\r\n        });\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    makeRequest(requestObj) {\r\n        return new Promise((resolve, reject) => {\r\n            requestObj.execute(resp =>\r\n                resp.error\r\n                    ? reject(resp.error)\r\n                    : resolve(resp.result));\r\n        });\r\n    }\r\n\r\n    // insertTaskList({ title }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.insert({ title });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // updateTaskList({ taskListId, title }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.update({\r\n    //         tasklist: taskListId,\r\n    //         id: taskListId,\r\n    //         title\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // deleteTaskList({ taskListId }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.delete({\r\n    //         tasklist: taskListId\r\n    //     });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // insertTask({ taskListId, ...params }) {\r\n    //     const request = window.gapi.client.tasks.tasks.insert({\r\n    //         tasklist: taskListId,\r\n    //         ...params\r\n    //     });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // updateTask({ taskListId, taskId, ...params }) {\r\n    //     const request = window.gapi.client.tasks.tasks.update({\r\n    //         tasklist: taskListId,\r\n    //         task: taskId,\r\n    //         id: taskId,\r\n    //         ...params\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // deleteTask({ taskListId, taskId }) {\r\n    //     const request = window.gapi.client.tasks.tasks.delete({\r\n    //         tasklist: taskListId,\r\n    //         task: taskId,\r\n    //         id: taskId\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n}\r\n\r\nexport default new TaskService();\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './ListView.scss';\nimport classNames from 'classnames';\n\ninterface LocalProps {\n  isActive?: boolean;\n  children: any[];\n  onChangeIndex?: (index: number) => void;\n  className?: string;\n}\n\nconst prefixCls = 'kai-list-view';\n\nconst ListView = React.memo<LocalProps>(\n  (props) => {\n    const itemRefs:any[] = [];\n\n    const [activeItem, setActiveItem] = useState(0);\n\n    const {\n      children,\n      onChangeIndex,\n      isActive,\n      className\n    } = props;\n\n    const handleChangeIndex = itemIndex => {\n      setActiveItem(itemIndex);\n      if(onChangeIndex) {\n        onChangeIndex(itemIndex);\n      }\n    };\n\n    const setFocusToIndex = useCallback(\n      index => {\n        if(itemRefs[index]){\n          const elem:any|null = ReactDOM.findDOMNode(itemRefs[index].current);\n          if(elem){\n            elem.focus();\n          }\n        }\n      },\n      [itemRefs]\n    );\n\n    const handleKeyDown = useCallback(\n      e => {\n        let index = activeItem;\n        if (!isActive) {\n          return;\n        }\n\n        switch (e.key) {\n          case 'ArrowUp':\n            // looping to bottom\n            index = index - 1 >= 0 ? index - 1 : index;\n            setFocusToIndex(index);\n            break;\n          case 'ArrowDown':\n            // looping to top\n            index = index + 1 < itemRefs.length ? index + 1 : index;\n            setFocusToIndex(index);\n            break;\n          //TODO: Handle right to go to next (if enabled)\n          default:\n            break;\n        }\n      },\n      [isActive, activeItem, setFocusToIndex, itemRefs]\n    );\n\n    useEffect(\n      () => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n      },\n      [handleKeyDown]\n    );\n\n    useEffect(\n      () => {\n        if(isActive) {\n          setFocusToIndex(activeItem)\n        }\n      },\n      [isActive, setFocusToIndex, activeItem]\n    );\n\n    const renderChildren = () => {\n      let index = -1;\n      return React.Children.map(children, child => {\n        // Don't focus on separators\n        if (!child || child.props.separatorText != null) {\n          return child;\n        }\n        index++;\n        const newRef = React.createRef();\n        itemRefs[index] = newRef;\n        return React.cloneElement(child, {\n          index,\n          onFocusChange: handleChangeIndex,\n          ref: newRef,\n        });\n      });\n    };\n\n    return <div className={classNames(prefixCls, (className||''))}>{renderChildren()}</div>;\n  }\n);\n\nexport default ListView;\n","import React, { useCallback, useEffect, useRef, useState }  from 'react';\nimport './Tabs.scss';\n\nconst prefixCls = 'kai-tabs';\n\nconst Tabs = React.memo<any>(\n  props => {\n    const {\n      onChangeIndex,\n      children\n    } = props;\n\n    const childRefs:any[] = [];\n    const [activeChild, setActiveChild] = useState(0);\n\n    const handleTabChange = useCallback(\n      childIndex => {\n      setActiveChild(childIndex);\n        childRefs[childIndex].current.scrollIntoView({\n          behavior: 'auto',\n          block: 'start',\n          inline: 'center',\n        });\n        onChangeIndex(childIndex);\n      },\n      [childRefs, onChangeIndex]\n    );\n\n    const handleKeyUp = useCallback(\n      e => {\n        let index = activeChild;\n        switch (e.key) {\n          case 'ArrowRight':\n            index = Math.min(\n              index + 1,\n              React.Children.count(children) - 1\n            );\n            if (activeChild !== index) {\n              handleTabChange(index);\n            }\n            break;\n          case 'ArrowLeft':\n            index = Math.max(index - 1, 0);\n            if (activeChild !== index) {\n              handleTabChange(index);\n            }\n            break;\n          default:\n            break;\n        }\n      },\n      [activeChild, children, handleTabChange]\n    );\n\n    const renderChildren = () => {\n      return React.Children.map(children, (child:any, i) => {\n        const childRef = useRef();\n\n        childRefs[i] = childRef;\n\n        return React.cloneElement<any>(\n          child, {\n            index: i,\n            onTabChange: handleTabChange,\n            isActive: activeChild === i,\n            ref: childRef\n          }\n        );\n      });\n    };\n    \n    useEffect(\n      () => {\n        document.addEventListener('keyup', handleKeyUp);\n        return () => document.removeEventListener('keyup', handleKeyUp);\n      },\n      [handleKeyUp]\n    );\n  \n    return <div className={prefixCls}>{renderChildren()}</div>;\n  }\n);\n\nexport default Tabs;\n","import React from 'react';\nimport colors from '../../theme/colors.scss';\nimport './Tab.scss';\n\nconst prefixCls = 'kai-tab';\n\nconst Tab = React.memo<any>(\n  props => {\n    const {\n      index,\n      label,\n      onTabChange,\n      isActive,\n      focusColor,\n      forwardedRef\n    } = props;\n\n    const actPrefixCls = `${prefixCls}${isActive ? '-active' : '-inactive'}`;\n\n    const handleClick = () => onTabChange(index);\n    const style = { '--tab-underline-color': (focusColor || colors.defaultFocusColor) } as React.CSSProperties;\n    return (\n      <div\n        onClick={handleClick}\n        className={actPrefixCls}\n        style={style}\n        ref={forwardedRef}\n      >\n        <div className={`${actPrefixCls}-label`}>{label}</div>\n      </div>\n    );\n  }\n);\n\nexport default React.forwardRef((props:any, ref:any) => (\n  <Tab forwardedRef={ref} {...props} />\n));\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport Tabs from '../../components/Tabs/Tabs';\nimport Tab from '../../components/Tab/Tab';\nimport colors from '../../theme/colors.scss';\nimport './TabView.scss';\n\nconst prefixCls = 'kai-tab-view';\n\ninterface LocalProps {\n  tabLabels: string[],\n  onChangeIndex?: (index: number) => void,\n  focusColor?: string,\n  children: any[]\n}\n\nconst TabView = React.memo<LocalProps>(\n  props => {\n    const {\n      tabLabels,\n      onChangeIndex,\n      focusColor,\n      children\n    } = props;\n\n    const [activeTab, setActiveTab] = useState(0);\n    const [isTransitionDone, setTransitionDone] = useState(true);\n\n    const tabViewTabs = `${prefixCls}-tabs`;\n    const tabViewContent = `${prefixCls}-content`;\n\n    const handleChangeIndex = tabIndex => {\n      // NOTE: Ensure you set state for tab transition first.\n      //       Otherwise you will face strange race condition bugs.\n      setTransitionDone(false);\n      setActiveTab(tabIndex);\n      if(onChangeIndex){\n        onChangeIndex(tabIndex);\n      }\n    };\n\n    const handleTransitionEnd = () => setTransitionDone(true);\n\n    const renderTabs = () => {\n      return tabLabels.map((label, i) => {\n        return (\n          <Tab\n            key={`key-${i}`}\n            label={label}\n            focusColor={(focusColor || colors.defaultFocusColor)}\n          />\n        );\n      });\n    };\n\n    const renderChildren = () => {\n      return React.Children.map(children, (child:any, i) => {\n        return React.cloneElement(child, {\n          isActive: activeTab === i && isTransitionDone,\n        });\n      });\n    };\n\n    return (\n      <div className={prefixCls}>\n        <div className={tabViewTabs}>\n          <Tabs onChangeIndex={handleChangeIndex}>\n            {renderTabs()}\n          </Tabs>\n        </div>\n\n        <div className={tabViewContent}>\n          <SwipeableViews\n            axis={'x'}\n            index={activeTab}\n            onChangeIndex={handleChangeIndex}\n            onTransitionEnd={handleTransitionEnd}\n            disabled={true}\n          >\n            {renderChildren()}\n          </SwipeableViews>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default TabView;\n","export const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);","import React, { useContext, useEffect, useState } from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport './App.scss';\nimport CheckboxListItem from './components/CheckboxListItem/CheckboxListItem';\nimport { SoftKeyProvider } from './components/SoftKey/SoftKeyProvider';\nimport ToastContext, { ToastContextProvider } from './contexts/toastContext';\nimport taskService from './services/taskService';\nimport config from './services/config.json';\nimport ListView from './views/ListView/ListView';\nimport TabView from './views/TabView/TabView';\nimport { isLocalhost } from \"./services/helperFunctions\"\n\nfunction App() {\n\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n  // const { showToast } = useContext(ToastContext);\n\n  const { signIn, loaded } = useGoogleLogin({\n    clientId: config.client_id,\n    onSuccess: async (rep) => {\n      console.log(rep)\n      await taskService.init()\n      let list = await taskService.getAllTaskList()\n      console.log(list)\n      setTaskList(list)\n      setSignedIn(true)\n      // showToast(\"Welcome\", 5000)\n    },\n    isSignedIn: true,\n    // cookiePolicy:'none',\n    redirectUri: !!isLocalhost ? \"http://localhost:3000\" : \"https://grachet.github.io/kaios-google-task\",\n    onFailure: (error) => {\n      console.error(error)\n    },\n    uxMode: \"redirect\",\n    scope: 'https://www.googleapis.com/auth/tasks',\n  })\n\n  useEffect(() => {\n    loaded && signIn()\n  }, []);\n\n  const App = () => {\n    return (\n      <div className=\"App\">\n        <SoftKeyProvider>\n          <div className=\"content\">\n            <TabView\n              tabLabels={taskList}\n            >\n              {taskList.map((list, i) => <ListView key={i}>\n                <CheckboxListItem\n                  primary={list}\n                  secondary=\"seconday text\"\n                  initCheckboxVal={false}\n                  checkboxSide=\"left\"\n                />\n                <CheckboxListItem\n                  primary=\"Hello primary text\"\n                  secondary=\"seconday text\"\n                  initCheckboxVal={false}\n                  checkboxSide=\"left\"\n                />\n              </ListView>\n              )}\n            </TabView>\n          </div>\n        </SoftKeyProvider>\n      </div >\n    );\n  }\n\n  return (\n    <ToastContextProvider>\n      <App />\n    </ToastContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}