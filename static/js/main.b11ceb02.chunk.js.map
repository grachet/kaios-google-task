{"version":3,"sources":["components/Softkey/Softkey.module.css","components/Todos/ToDos.module.css","components/Input/Input.module.css","components/Softkey/Softkey.js","service/taskService.js","service/helperFunctions.js","App.js","index.js"],"names":["module","exports","softkey","left","right","center","todos","completed","input","Softkey","_ref","onKeyLeft","onKeyCenter","onKeyRight","useEffect","document","addEventListener","handleKeyDown","removeEventListener","evt","key","react_default","a","createElement","className","css","taskService","Promise","resolve","reject","window","gapi","client","load","request","tasks","tasklists","list","this","makeRequest","taskListId","get","tasklist","requestObj","execute","resp","error","result","isLocalhost","Boolean","location","hostname","match","App","_useState","useState","_useState2","Object","slicedToArray","isSignedIn","setSignedIn","_useState3","_useState4","taskList","setTaskList","_useGoogleLogin","useGoogleLogin","clientId","config","web","client_id","onSuccess","_onSuccess","asyncToGenerator","regenerator_default","mark","_callee","rep","listTaskLists","wrap","_context","prev","next","console","log","init","sent","stop","_x","apply","arguments","redirectUri","onFailure","uxMode","scope","signIn","loaded","sign","Fragment","onClick","JSON","stringify","Softkey_Softkey","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b11ceb02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"softkey\":\"Softkey_softkey__IzEv-\",\"left\":\"Softkey_left__3bN5n\",\"right\":\"Softkey_right__UP2x3\",\"center\":\"Softkey_center__2AwmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"ToDos_todos__33HrU\",\"completed\":\"ToDos_completed__2tBhO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3oRWX\"};","import React, { useEffect } from \"react\";\nimport css from \"./Softkey.module.css\";\n\nexport const Softkey = ({\n  left,\n  onKeyLeft,\n  center,\n  onKeyCenter,\n  right,\n  onKeyRight\n}) => {\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = evt => {\n    switch (evt.key) {\n      case \"SoftLeft\":\n        return onKeyLeft && onKeyLeft(evt);\n      case \"Enter\":\n        return onKeyCenter && onKeyCenter(evt);\n      case \"SoftRight\":\n        return onKeyRight && onKeyRight(evt);\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className={css.softkey}>\n      <label className={css.left}>{left}</label>\n      <label className={css.center}>{center}</label>\n      <label className={css.right}>{right}</label>\n    </div>\n  );\n};\n","class TaskService {\r\n\r\n    init() {\r\n        return new Promise((resolve, reject) => {\r\n            return window.gapi.client.load('tasks', 'v1', () =>\r\n                window.gapi.client.load('plus', 'v1', () => resolve()));\r\n        });\r\n    }\r\n\r\n    listTaskLists() {\r\n        const request = window.gapi.client.tasks.tasklists.list();\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n    showTaskList(taskListId) {\r\n        const request = window.gapi.client.tasks.tasklists.get({ tasklist: taskListId });\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    listTasks(taskListId) {\r\n        const request = window.gapi.client.tasks.tasks.list({\r\n            tasklist: taskListId\r\n        });\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    makeRequest(requestObj) {\r\n        return new Promise((resolve, reject) => {\r\n            requestObj.execute(resp =>\r\n                resp.error\r\n                    ? reject(resp.error)\r\n                    : resolve(resp.result));\r\n        });\r\n    }\r\n\r\n    // insertTaskList({ title }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.insert({ title });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // updateTaskList({ taskListId, title }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.update({\r\n    //         tasklist: taskListId,\r\n    //         id: taskListId,\r\n    //         title\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // deleteTaskList({ taskListId }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.delete({\r\n    //         tasklist: taskListId\r\n    //     });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // insertTask({ taskListId, ...params }) {\r\n    //     const request = window.gapi.client.tasks.tasks.insert({\r\n    //         tasklist: taskListId,\r\n    //         ...params\r\n    //     });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // updateTask({ taskListId, taskId, ...params }) {\r\n    //     const request = window.gapi.client.tasks.tasks.update({\r\n    //         tasklist: taskListId,\r\n    //         task: taskId,\r\n    //         id: taskId,\r\n    //         ...params\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // deleteTask({ taskListId, taskId }) {\r\n    //     const request = window.gapi.client.tasks.tasks.delete({\r\n    //         tasklist: taskListId,\r\n    //         task: taskId,\r\n    //         id: taskId\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n}\r\n\r\nexport default new TaskService();\r\n","export const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);","import React, { useEffect, useState } from \"react\";\nimport config from \"./config.json\"\nimport { Header, Input, Softkey, ToDos } from \"./components\";\nimport { useNavigation } from \"./hooks\";\nimport taskService from \"./service/taskService\";\nimport { useGoogleLogin } from 'react-google-login'\nimport { isLocalhost } from \"./service/helperFunctions\";\n\nexport default function App() {\n\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [taskList, setTaskList] = useState(false);\n\n  const { signIn, loaded } = useGoogleLogin({\n    clientId: config.web.client_id,\n    onSuccess: async (rep) => {\n      console.log(rep)\n      await taskService.init()\n      let listTaskLists = await taskService.listTaskLists()\n      setTaskList(listTaskLists)\n      setSignedIn(true)\n    },\n    isSignedIn: true,\n    // cookiePolicy:'none',\n    redirectUri: !!isLocalhost ? \"http://localhost:3000\" : \"https://grachet.github.io/kaios-google-task\",\n    onFailure: (error) => {\n      console.error(error)\n    },\n    uxMode: \"redirect\",\n    scope: 'https://www.googleapis.com/auth/tasks',\n  })\n\n  console.log(taskList)\n\n  const sign = () => {\n    loaded && signIn()\n  }\n\n  return (\n    <>\n      {!!isLocalhost && <button onClick={() => sign()}>Sign</button>}\n\n      {JSON.stringify(taskList)}\n\n      <Softkey\n        left={isSignedIn ? null : \"Sign In\"}\n        onKeyLeft={() => {\n          sign()\n        }}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}