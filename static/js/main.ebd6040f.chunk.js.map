{"version":3,"sources":["theme/colors.scss","components/SoftKey/SoftKey.tsx","components/SoftKey/SoftKeyProvider.tsx","components/SoftKey/withSoftKeyManager.tsx","components/CheckboxListItem/CheckboxListItem.tsx","components/Toast/Toast.tsx","contexts/toastContext.tsx","services/taskService.js","views/ListView/ListView.tsx","components/Tabs/Tabs.tsx","components/Tab/Tab.tsx","views/TabView/TabView.tsx","services/helperFunctions.js","components/ProgressBar/ProgressBar.tsx","hooks/useFocus.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","defaultFocusColor","headerPurple","headerPink","headerLime","headerCyan","headerBlue","headerOrange","headerRed","darkBlue","turquoise","darkOrange","orange","yellow","violet","carrotOrange","watTheBlue","gold","purple","pink","lime","cyan","red","warning","destructive","preferred","black","grayscale90","grayscale70","grayscale45","grayscale20","grayscale10","white","Button","props","renderedIcon","handleClick","icon","text","id","React","isValidElement","toString","indexOf","react_default","a","createElement","alt","src","width","height","className","concat","onClick","e","preventDefault","onFocus","relatedTarget","focus","currentTarget","blur","data-icon","undefined","SoftKey","memo","leftCallback","rightCallback","centerCallback","leftText","rightText","centerText","leftIcon","centerIcon","rightIcon","handleKeyDown","useCallback","key","useEffect","document","addEventListener","removeEventListener","SoftKey_Button","pos","SoftKeyContext","createContext","SoftKeyProvider","_React$PureComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setLeftCallback","setState","setRightCallback","setCenterCallback","setLeftText","setRightText","setCenterText","setCenterIcon","setLeftIcon","setRightIcon","setSoftKeyTexts","_ref","_ref$leftText","_ref$centerText","_ref$rightText","setSoftKeyCallbacks","_ref2","_ref2$leftCallback","_ref2$centerCallback","_ref2$rightCallback","unregisterSoftKeys","state","inherits","createClass","value","context","Provider","children","components_SoftKey_SoftKey","PureComponent","SoftKeyConsumer","Consumer","CheckboxListItem","primary","secondary","initCheckboxVal","onInputChange","checkboxSide","focusColor","onFocusChange","index","forwardedRef","softKeyManager","softKeyCheckedText","softKeyUncheckedText","softKeyCheckedIcon","softKeyUncheckedIcon","_useState","useState","_useState2","slicedToArray","isChecked","setChecked","_useState3","_useState4","isFocused","setFocused","boxCls","lineCls","primaryCls","secondaryCls","inputCls","handleInvertCheck","wasChecked","handleInputChange","target","checked","handleFocusChange","isNowFocused","checkbox","tabIndex","type","onChange","style","backgroundColor","colors","ref","onBlur","forwardRef","withSoftKeyManager_SoftKeyConsumer","CheckboxListItem_CheckboxListItem","assign","Toast","isDisplayed","itemCls","classnames","isProcessingQueue","toastQueue","ToastContext","ToastContextProvider","setText","setIsDisplayed","showToast","duration","push","processQueue","length","toastData","shift","setTimeout","components_Toast_Toast","taskService","Promise","resolve","reject","window","gapi","client","load","listTaskLists","listOfList","all","items","map","asyncToGenerator","regenerator_default","mark","_callee","list","rep","wrap","_context","prev","next","listTasks","sent","abrupt","objectSpread","tasks","Array","isArray","stop","_x","apply","arguments","request","tasklists","makeRequest","taskListId","get","tasklist","requestObj","execute","resp","error","result","taskId","params","objectWithoutProperties","update","task","ListView","itemRefs","activeItem","setActiveItem","onChangeIndex","isActive","handleChangeIndex","itemIndex","setFocusToIndex","elem","ReactDOM","findDOMNode","current","classNames","Children","child","separatorText","newRef","createRef","cloneElement","renderChildren","Tabs","childRefs","activeChild","setActiveChild","handleTabChange","childIndex","scrollIntoView","behavior","block","inline","handleKeyUp","Math","min","count","max","i","childRef","useRef","onTabChange","Tab","label","actPrefixCls","--tab-underline-color","Tab_Tab","TabView","tabLabels","activeTab","setActiveTab","isTransitionDone","setTransitionDone","tabViewTabs","tabViewContent","components_Tabs_Tabs","components_Tab_Tab","lib_default","axis","onTransitionEnd","disabled","isLocalhost","Boolean","location","hostname","match","ProgressBar","header","percentage","onFocusChanged","focusedByDefault","component","useFocus","barWrapperCls","leftFillerCls","rightFillerCls","ProgressBar_ProgressBar","App","isSignedIn","setSignedIn","taskList","setTaskList","_useGoogleLogin","useGoogleLogin","clientId","config","client_id","onSuccess","_onSuccess","init","t0","getAllTaskList","t1","redirectUri","onFailure","console","uxMode","scope","signIn","loaded","toastContext_ToastContextProvider","useContext","components_ProgressBar_ProgressBar","SoftKeyProvider_SoftKeyProvider","views_TabView_TabView","title","views_ListView_ListView","ti","components_CheckboxListItem_CheckboxListItem","status","updateTask","then","catch","err","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebd6040f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultFocusColor\":\"var(--color-purple)\",\"headerPurple\":\"var(--header-purple-background)\",\"headerPink\":\"var(--header-pink-background)\",\"headerLime\":\"var(--header-lime-background)\",\"headerCyan\":\"var(--header-cyan-background)\",\"headerBlue\":\"var(--header-blue-background)\",\"headerOrange\":\"var(--header-orange-background)\",\"headerRed\":\"var(--header-red-background)\",\"darkBlue\":\"var(--color-darkblue)\",\"turquoise\":\"var(--color-turquoise)\",\"darkOrange\":\"var(--color-darkorange)\",\"orange\":\"var(--color-orange)\",\"yellow\":\"var(--color-yellow)\",\"violet\":\"var(--color-violet)\",\"carrotOrange\":\"var(--color-carrotorange)\",\"watTheBlue\":\"var(--color-wathetblue)\",\"gold\":\"var(--color-gold)\",\"purple\":\"var(--color-purple)\",\"pink\":\"var(--color-pink)\",\"lime\":\"var(--color-lime)\",\"cyan\":\"var(--color-cyan)\",\"red\":\"var(--color-red)\",\"warning\":\"var(--color-warning)\",\"destructive\":\"var(--color-destructive)\",\"preferred\":\"var(--color-preferred)\",\"black\":\"var(--color-gs100)\",\"grayscale90\":\"var(--color-gs90)\",\"grayscale70\":\"var(--color-gs70)\",\"grayscale45\":\"var(--color-gs45)\",\"grayscale20\":\"var(--color-gs20)\",\"grayscale10\":\"var(--color-gs10)\",\"white\":\"var(--color-gs00)\"};","import React, { useCallback, useEffect } from 'react';\n\nimport './SoftKey.scss';\n\nconst prefixCls = 'kai-softkey';\n\nconst Button = props => {\n  const { handleClick, icon, text, id } = props;\n\n  const handleButtonClick = e => {\n    e.preventDefault();\n    if (handleClick) {\n      handleClick();\n    }\n  };\n\n  // We want to avoid losing focus on the parent element\n  const handleCheckFocus = e => {\n    e.preventDefault();\n    if (e.relatedTarget) {\n      // Revert focus back to previous blurring element\n      e.relatedTarget.focus();\n    } else {\n      // No previous focus target, blur instead\n      e.currentTarget.blur();\n    }\n  };\n\n  let renderedIcon: any | undefined;\n  if (icon) {\n    if (React.isValidElement(icon)) {\n      renderedIcon = icon;\n    }\n    else if (icon.toString().indexOf(\"kai-\") === -1) {\n      renderedIcon = <img alt=\"img\" src={icon} width={20} height={20} />\n    }\n    else {\n      renderedIcon = <span className={icon} />;\n    }\n  }\n\n  return (\n    <button\n      id={id}\n      className={`${prefixCls}-btn`}\n      onClick={handleButtonClick}\n      onFocus={handleCheckFocus}\n      data-icon={renderedIcon ? \"true\" : undefined}\n    >\n      {renderedIcon}\n      {text}\n    </button>\n  );\n};\n\ninterface SoftKeyProps {\n  leftText?: string | null,\n  centerText?: string | null,\n  rightText?: string | null,\n  centerIcon?: any | null,\n  leftIcon?: any | null,\n  rightIcon?: any | null,\n  leftCallback?: () => void,\n  centerCallback?: () => void,\n  rightCallback?: () => void,\n}\n\nconst SoftKey = React.memo<SoftKeyProps>(props => {\n  const {\n    leftCallback,\n    rightCallback,\n    centerCallback,\n    leftText,\n    rightText,\n    centerText,\n    leftIcon,\n    centerIcon,\n    rightIcon,\n  } = props;\n\n  const handleKeyDown = useCallback(\n    e => {\n      switch (e.key) {\n        case 'SoftLeft':\n          if (leftCallback) {\n            leftCallback();\n          }\n          break;\n        case 'SoftRight':\n          if (rightCallback) {\n            rightCallback();\n          }\n          break;\n        case 'Enter':\n          // Action case press center key\n          if (centerCallback) {\n            centerCallback();\n          }\n          break;\n        default:\n          break;\n      }\n    },\n    [leftCallback, rightCallback, centerCallback]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <div className={`${prefixCls} visible`}>\n      <Button\n        id=\"leftSoftKey\"\n        pos=\"left\"\n        text={leftText}\n        icon={leftIcon}\n        handleClick={leftCallback} />\n      <Button\n        id=\"centerSoftKey\"\n        pos=\"center\"\n        text={centerText}\n        icon={centerIcon}\n        handleClick={centerCallback}\n      />\n      <Button\n        id=\"rightSoftKey\"\n        pos=\"right\"\n        text={rightText}\n        icon={rightIcon}\n        handleClick={rightCallback} />\n    </div>\n  );\n});\n\nexport default SoftKey;\n","import React from 'react';\nimport SoftKey from './SoftKey';\n\ninterface LocalProps {\n  className?:string\n}\n\ninterface LocalState {\n  leftText: string | null,\n  centerText: string | null,\n  rightText: string | null,\n  centerIcon: any | null,\n  leftIcon: any | null,\n  rightIcon: any | null,\n  leftCallback?: () => void,\n  centerCallback: () => void,\n  rightCallback: () => void,\n}\n\nexport const SoftKeyContext = React.createContext<SoftKeyContextProps|undefined>(undefined);\nexport interface SoftKeyContextProps {\n  setLeftCallback: (leftCallback: () => void) => void,\n  setRightCallback: (rightCallback: () => void) => void,\n  setCenterCallback: (centerCallback: () => void) => void,\n  setLeftText: (leftText: any) => void,\n  setRightText: (rightText: any) => void,\n  setCenterText: (centerText: any) => void,\n  setLeftIcon: (leftIcon: any) => void,\n  setCenterIcon: (centerIcon: any) => void,\n  setRightIcon: (rightIcon: any) => void,\n  setSoftKeyTexts: ({ leftText, centerText, rightText }: {\n      leftText?: string | undefined;\n      centerText?: string | undefined;\n      rightText?: string | undefined;\n  }) => void,\n  setSoftKeyCallbacks: ({ leftCallback, centerCallback, rightCallback, }: {\n    leftCallback?: (() => void) | undefined;\n    centerCallback?: (() => void) | undefined;\n    rightCallback?: (() => void) | undefined;\n}) => void,\n  unregisterSoftKeys: () => void\n}\n\nexport class SoftKeyProvider extends React.PureComponent<LocalProps, LocalState> {\n\n  constructor(props: LocalProps){\n    super(props);\n\n    this.state = {\n      leftText: '',\n      centerText: '',\n      rightText: '',\n      centerIcon: null,\n      leftIcon: null,\n      rightIcon: null,\n      leftCallback: () => {},\n      centerCallback: () => {},\n      rightCallback: () => {},\n    };  \n  }\n\n  setLeftCallback = (leftCallback: () => void) => {\n    this.setState({ leftCallback });\n  };\n\n  setRightCallback = (rightCallback: () => void) => {\n    this.setState({ rightCallback });\n  };\n\n  setCenterCallback = (centerCallback: () => void) => {\n    this.setState({ centerCallback });\n  };\n\n  setLeftText = leftText => {\n    this.setState({ leftText, leftIcon: null });\n  };\n\n  setRightText = rightText => {\n    this.setState({ rightText, rightIcon: null });\n  };\n\n  setCenterText = centerText => {\n    this.setState({ centerText, centerIcon: null });\n  };\n\n  setCenterIcon = centerIcon => {\n    this.setState({ centerIcon, centerText: null });\n  };\n\n  setLeftIcon = leftIcon => {\n    this.setState({ leftIcon, leftText: null });\n  };\n\n  setRightIcon = rightIcon => {\n    this.setState({ rightIcon, rightText: null });\n  };\n\n  // Shortcuts for convenience\n\n  setSoftKeyTexts = ({ leftText = '', centerText = '', rightText = '' }) => {\n    this.setState({ leftText, centerText, rightText });\n  };\n\n  setSoftKeyCallbacks = ({\n    leftCallback = () => {},\n    centerCallback = () => {},\n    rightCallback = () => {},\n  }) => {\n    this.setState({ leftCallback, centerCallback, rightCallback });\n  };\n\n  unregisterSoftKeys = () => {\n    this.setState({\n      leftCallback: () => {},\n      centerCallback: () => {},\n      rightCallback: () => {},\n      leftText: null,\n      rightText: null,\n      centerText: null,\n      centerIcon: null,\n    });\n  };\n\n  render() {\n    const context: SoftKeyContextProps = {\n      setLeftCallback: this.setLeftCallback,\n      setRightCallback: this.setRightCallback,\n      setCenterCallback: this.setCenterCallback,\n      setLeftText: this.setLeftText,\n      setRightText: this.setRightText,\n      setCenterText: this.setCenterText,\n      setLeftIcon: this.setLeftIcon,\n      setCenterIcon: this.setCenterIcon,\n      setRightIcon: this.setRightIcon,\n      setSoftKeyTexts: this.setSoftKeyTexts,\n      setSoftKeyCallbacks: this.setSoftKeyCallbacks,\n      unregisterSoftKeys: this.unregisterSoftKeys\n    };\n\n    return (\n      <SoftKeyContext.Provider value={context}>\n        {this.props.children}\n        <footer className={this.props.className || ''}>\n          <SoftKey\n            leftText={this.state.leftText}\n            leftIcon={this.state.leftIcon}\n            centerText={this.state.centerText}\n            centerIcon={this.state.centerIcon}\n            rightIcon={this.state.rightIcon}\n            rightText={this.state.rightText}\n            leftCallback={this.state.leftCallback}\n            centerCallback={this.state.centerCallback}\n            rightCallback={this.state.rightCallback}\n          />\n        </footer>\n      </SoftKeyContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { SoftKeyContext, SoftKeyContextProps } from './SoftKeyProvider';\n\nexport interface SoftKeyManagerProps{\n  softKeyManager: SoftKeyContextProps\n}\n\nexport const SoftKeyConsumer = ({ children }) => (\n  <SoftKeyContext.Consumer>\n    {context => children(context)}\n  </SoftKeyContext.Consumer>\n);\n\nexport const withSoftKeyManager = Comp => props => (\n  <SoftKeyConsumer>\n    {context => <Comp softKeyManager={context} {...props} />}\n  </SoftKeyConsumer>\n);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport colors from '../../theme/colors.scss';\nimport { SoftKeyConsumer } from '../SoftKey/withSoftKeyManager';\nimport './CheckboxListItem.scss';\nimport { SoftKeyContextProps } from '../SoftKey/SoftKeyProvider';\n\nconst prefixCls = 'kai-cbl';\n\ninterface LocalProps {\n  id?: string;\n  primary: string;\n  secondary?: string;\n  initCheckboxVal?: boolean;\n  onInputChange?: (checked: any) => void;\n  checkboxSide?: \"left\" | \"right\";\n  focusColor?: string;\n  onFocusChange?: (index: number) => void;\n  index?: number;\n  forwardedRef?: any;\n  softKeyManager?: SoftKeyContextProps;\n  softKeyCheckedText?: string;\n  softKeyUncheckedText?: string;\n  softKeyCheckedIcon?: any;\n  softKeyUncheckedIcon?: any;\n}\n\nconst CheckboxListItem = React.memo<LocalProps>(props => {\n  const {\n    id,\n    primary,\n    secondary,\n    initCheckboxVal,\n    onInputChange,\n    checkboxSide,\n    focusColor,\n    onFocusChange,\n    index,\n    forwardedRef,\n    softKeyManager,\n    softKeyCheckedText,\n    softKeyUncheckedText,\n    softKeyCheckedIcon,\n    softKeyUncheckedIcon,\n  } = props;\n\n  // Managed vs self-managed radio buttons\n  const [isChecked, setChecked] = useState(initCheckboxVal);\n  const [isFocused, setFocused] = useState(false);\n\n  const itemCls = prefixCls;\n  const boxCls = `${prefixCls}-box`;\n  const lineCls = `${prefixCls}-line ${checkboxSide === 'left' ? 'right' : 'left'\n    }`;\n  const primaryCls = `${prefixCls}-primary`;\n  const secondaryCls = `${prefixCls}-secondary ${secondary ? '' : 'hidden'}`;\n  const inputCls = `${boxCls}-input-${isFocused ? 'focused' : 'unfocused'}`;\n\n  useEffect(() => {\n    const centerText = isChecked ? softKeyCheckedText : softKeyUncheckedText;\n    const centerIcon = isChecked ? softKeyCheckedIcon : softKeyUncheckedIcon;\n    if (isFocused) {\n      if (centerIcon != null) {\n        softKeyManager.setCenterIcon(centerIcon);\n      } else {\n        softKeyManager.setCenterText(centerText);\n      }\n    }\n  }, [\n    isFocused,\n    isChecked,\n    softKeyManager,\n    softKeyCheckedText,\n    softKeyUncheckedText,\n    softKeyCheckedIcon,\n    softKeyUncheckedIcon,\n  ]);\n\n  const handleInvertCheck = () => {\n    if (onInputChange) {\n      onInputChange(!isChecked);\n    }\n    setChecked(wasChecked => !wasChecked);\n  }\n\n  const handleInputChange = (e) => {\n    setChecked(e.target.checked);\n    if (onInputChange) {\n      onInputChange(e.target.checked);\n    }\n  };\n\n  // We want to avoid losing focus on the parent element\n  const handleCheckFocus = e => {\n    e.preventDefault();\n    if (e.relatedTarget) {\n      // Revert focus back to previous blurring element\n      e.relatedTarget.focus();\n    } else {\n      // No previous focus target, blur instead\n      e.currentTarget.blur();\n    }\n  };\n\n  const handleFocusChange = useCallback(\n    isNowFocused => {\n      setFocused(isNowFocused);\n      if (isNowFocused) {\n        const centerText = isChecked\n          ? softKeyCheckedText\n          : softKeyUncheckedText;\n        const centerIcon = isChecked\n          ? softKeyCheckedIcon\n          : softKeyUncheckedIcon;\n        if (centerIcon != null) {\n          softKeyManager.setCenterIcon(centerIcon);\n        } else {\n          softKeyManager.setCenterText(centerText);\n        }\n        softKeyManager.setCenterCallback(handleInvertCheck);\n        onFocusChange(index);\n      }\n    },\n    [\n      index,\n      onFocusChange,\n      isChecked,\n      softKeyCheckedText,\n      softKeyUncheckedText,\n      softKeyCheckedIcon,\n      softKeyUncheckedIcon,\n      softKeyManager,\n    ]\n  );\n\n  const checkbox = (\n    <div className={boxCls}>\n      <input\n        id={id}\n        className={inputCls}\n        tabIndex={-1}\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={handleInputChange}\n        onFocus={handleCheckFocus}\n        onClick={handleInputChange}\n      />\n    </div>\n  );\n\n  return (\n    <div\n      tabIndex={0}\n      className={itemCls}\n      style={{ backgroundColor: isFocused ? (focusColor || colors.defaultFocusColor) : colors.white }}\n      ref={forwardedRef}\n      onFocus={() => handleFocusChange(true)}\n      onBlur={() => handleFocusChange(false)}\n    >\n      {checkboxSide === 'left' || checkboxSide === undefined ? checkbox : null}\n      <div className={lineCls}>\n        <span className={primaryCls}>{primary}</span>\n        <label className={secondaryCls}>{secondary}</label>\n      </div>\n      {checkboxSide === 'right' ? checkbox : null}\n    </div>\n  );\n});\n\nexport default React.forwardRef((props: LocalProps, ref) => (\n  <SoftKeyConsumer>\n    {context => (\n      <CheckboxListItem\n        softKeyManager={context}\n        forwardedRef={ref}\n        {...props}\n      />\n    )}\n  </SoftKeyConsumer>\n));\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Toast.scss';\n\nconst Toast = ({ text, isDisplayed }) => {\n  const prefixCls = 'kai-toast';  \n  const itemCls = classnames(\n      prefixCls,\n      isDisplayed && `${prefixCls}--displayed`,\n  );\n\n  return (\n    <h1 className={itemCls}>{text}</h1>\n  )\n};\n\nexport default Toast;","import React, { useState } from 'react';\nimport Toast from '../components/Toast/Toast';\n\nexport interface ToastMessage {\n    text: string;\n    duration: number;\n}\nlet isProcessingQueue = false;\nconst toastQueue: ToastMessage[] = [];\n\nexport interface ToastContextProps{\n    showToast: (text, duration) => void,\n}\n\nconst ToastContext = React.createContext<ToastContextProps|undefined>(undefined);\n\nconst ToastContextProvider = ({ children }) => {\n  const [text, setText] = useState('');\n  const [isDisplayed, setIsDisplayed] = useState(false);\n\n  const processQueue = () => {\n    if (toastQueue.length === 0) {\n      isProcessingQueue = false;\n      return;\n    }\n    isProcessingQueue = true;\n    const toastData = toastQueue.shift();\n    if(toastData){\n        setText(toastData.text);\n        setIsDisplayed(true)\n        setTimeout(() => {\n        setIsDisplayed(false);\n        // Wait for the closing animation before processing next toast\n        setTimeout(() => {\n            processQueue();\n        }, 300);\n        }, toastData.duration || 5000)\n    }\n  }\n    \n  const showToast = (text, duration) => {\n    toastQueue.push({ text, duration });\n    !isProcessingQueue && processQueue();\n  };\n\n  return (\n    <ToastContext.Provider value={{ showToast }}>\n      <Toast text={text} isDisplayed={isDisplayed} />\n      {children}\n    </ToastContext.Provider>\n  )\n}\n\nconst withToast = (Component:any) => (props:any) => (\n    <ToastContext.Consumer>\n      {toastProps => <Component {...props} \n                        {...toastProps}\n                    />}\n    </ToastContext.Consumer>\n  );\n  \n\nexport default ToastContext;\nexport { ToastContextProvider, withToast };","class TaskService {\r\n\r\n    init() {\r\n        return new Promise((resolve, reject) => {\r\n            return window.gapi.client.load('tasks', 'v1', () =>\r\n                window.gapi.client.load('plus', 'v1', () => resolve()));\r\n        });\r\n    }\r\n\r\n    async getAllTaskList() {\r\n        let listOfList = await this.listTaskLists()\r\n        return await Promise.all(listOfList.items.map(async (list) => {\r\n            let rep = await this.listTasks(list.id)\r\n            return {\r\n                ...list,\r\n                tasks: Array.isArray(rep && rep.items) ? rep.items : []\r\n            }\r\n        }))\r\n    }\r\n\r\n    listTaskLists() {\r\n        const request = window.gapi.client.tasks.tasklists.list();\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n    showTaskList(taskListId) {\r\n        const request = window.gapi.client.tasks.tasklists.get({ tasklist: taskListId });\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    listTasks(taskListId) {\r\n        const request = window.gapi.client.tasks.tasks.list({\r\n            tasklist: taskListId\r\n        });\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    makeRequest(requestObj) {\r\n        return new Promise((resolve, reject) => {\r\n            requestObj.execute(resp =>\r\n                resp.error\r\n                    ? reject(resp.error)\r\n                    : resolve(resp.result));\r\n        });\r\n    }\r\n\r\n\r\n    updateTask({ taskListId, taskId, ...params }) {\r\n        const request = window.gapi.client.tasks.tasks.update({\r\n            tasklist: taskListId,\r\n            task: taskId,\r\n            id: taskId,\r\n            ...params\r\n        });\r\n\r\n        return this.makeRequest(request);\r\n    }\r\n\r\n\r\n    // insertTaskList({ title }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.insert({ title });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // updateTaskList({ taskListId, title }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.update({\r\n    //         tasklist: taskListId,\r\n    //         id: taskListId,\r\n    //         title\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // deleteTaskList({ taskListId }) {\r\n    //     const request = window.gapi.client.tasks.tasklists.delete({\r\n    //         tasklist: taskListId\r\n    //     });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // insertTask({ taskListId, ...params }) {\r\n    //     const request = window.gapi.client.tasks.tasks.insert({\r\n    //         tasklist: taskListId,\r\n    //         ...params\r\n    //     });\r\n    //     return this.makeRequest(request);\r\n    // }\r\n\r\n    // deleteTask({ taskListId, taskId }) {\r\n    //     const request = window.gapi.client.tasks.tasks.delete({\r\n    //         tasklist: taskListId,\r\n    //         task: taskId,\r\n    //         id: taskId\r\n    //     });\r\n\r\n    //     return this.makeRequest(request);\r\n    // }\r\n}\r\n\r\nexport default new TaskService();\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './ListView.scss';\nimport classNames from 'classnames';\n\ninterface LocalProps {\n  isActive?: boolean;\n  children: any[];\n  onChangeIndex?: (index: number) => void;\n  className?: string;\n}\n\nconst prefixCls = 'kai-list-view';\n\nconst ListView = React.memo<LocalProps>(\n  (props) => {\n    const itemRefs:any[] = [];\n\n    const [activeItem, setActiveItem] = useState(0);\n\n    const {\n      children,\n      onChangeIndex,\n      isActive,\n      className\n    } = props;\n\n    const handleChangeIndex = itemIndex => {\n      setActiveItem(itemIndex);\n      if(onChangeIndex) {\n        onChangeIndex(itemIndex);\n      }\n    };\n\n    const setFocusToIndex = useCallback(\n      index => {\n        if(itemRefs[index]){\n          const elem:any|null = ReactDOM.findDOMNode(itemRefs[index].current);\n          if(elem){\n            elem.focus();\n          }\n        }\n      },\n      [itemRefs]\n    );\n\n    const handleKeyDown = useCallback(\n      e => {\n        let index = activeItem;\n        if (!isActive) {\n          return;\n        }\n\n        switch (e.key) {\n          case 'ArrowUp':\n            // looping to bottom\n            index = index - 1 >= 0 ? index - 1 : index;\n            setFocusToIndex(index);\n            break;\n          case 'ArrowDown':\n            // looping to top\n            index = index + 1 < itemRefs.length ? index + 1 : index;\n            setFocusToIndex(index);\n            break;\n          //TODO: Handle right to go to next (if enabled)\n          default:\n            break;\n        }\n      },\n      [isActive, activeItem, setFocusToIndex, itemRefs]\n    );\n\n    useEffect(\n      () => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n      },\n      [handleKeyDown]\n    );\n\n    useEffect(\n      () => {\n        if(isActive) {\n          setFocusToIndex(activeItem)\n        }\n      },\n      [isActive, setFocusToIndex, activeItem]\n    );\n\n    const renderChildren = () => {\n      let index = -1;\n      return React.Children.map(children, child => {\n        // Don't focus on separators\n        if (!child || child.props.separatorText != null) {\n          return child;\n        }\n        index++;\n        const newRef = React.createRef();\n        itemRefs[index] = newRef;\n        return React.cloneElement(child, {\n          index,\n          onFocusChange: handleChangeIndex,\n          ref: newRef,\n        });\n      });\n    };\n\n    return <div className={classNames(prefixCls, (className||''))}>{renderChildren()}</div>;\n  }\n);\n\nexport default ListView;\n","import React, { useCallback, useEffect, useRef, useState }  from 'react';\nimport './Tabs.scss';\n\nconst prefixCls = 'kai-tabs';\n\nconst Tabs = React.memo<any>(\n  props => {\n    const {\n      onChangeIndex,\n      children\n    } = props;\n\n    const childRefs:any[] = [];\n    const [activeChild, setActiveChild] = useState(0);\n\n    const handleTabChange = useCallback(\n      childIndex => {\n      setActiveChild(childIndex);\n        childRefs[childIndex].current.scrollIntoView({\n          behavior: 'auto',\n          block: 'start',\n          inline: 'center',\n        });\n        onChangeIndex(childIndex);\n      },\n      [childRefs, onChangeIndex]\n    );\n\n    const handleKeyUp = useCallback(\n      e => {\n        let index = activeChild;\n        switch (e.key) {\n          case 'ArrowRight':\n            index = Math.min(\n              index + 1,\n              React.Children.count(children) - 1\n            );\n            if (activeChild !== index) {\n              handleTabChange(index);\n            }\n            break;\n          case 'ArrowLeft':\n            index = Math.max(index - 1, 0);\n            if (activeChild !== index) {\n              handleTabChange(index);\n            }\n            break;\n          default:\n            break;\n        }\n      },\n      [activeChild, children, handleTabChange]\n    );\n\n    const renderChildren = () => {\n      return React.Children.map(children, (child:any, i) => {\n        const childRef = useRef();\n\n        childRefs[i] = childRef;\n\n        return React.cloneElement<any>(\n          child, {\n            index: i,\n            onTabChange: handleTabChange,\n            isActive: activeChild === i,\n            ref: childRef\n          }\n        );\n      });\n    };\n    \n    useEffect(\n      () => {\n        document.addEventListener('keyup', handleKeyUp);\n        return () => document.removeEventListener('keyup', handleKeyUp);\n      },\n      [handleKeyUp]\n    );\n  \n    return <div className={prefixCls}>{renderChildren()}</div>;\n  }\n);\n\nexport default Tabs;\n","import React from 'react';\nimport colors from '../../theme/colors.scss';\nimport './Tab.scss';\n\nconst prefixCls = 'kai-tab';\n\nconst Tab = React.memo<any>(\n  props => {\n    const {\n      index,\n      label,\n      onTabChange,\n      isActive,\n      focusColor,\n      forwardedRef\n    } = props;\n\n    const actPrefixCls = `${prefixCls}${isActive ? '-active' : '-inactive'}`;\n\n    const handleClick = () => onTabChange(index);\n    const style = { '--tab-underline-color': (focusColor || colors.defaultFocusColor) } as React.CSSProperties;\n    return (\n      <div\n        onClick={handleClick}\n        className={actPrefixCls}\n        style={style}\n        ref={forwardedRef}\n      >\n        <div className={`${actPrefixCls}-label`}>{label}</div>\n      </div>\n    );\n  }\n);\n\nexport default React.forwardRef((props:any, ref:any) => (\n  <Tab forwardedRef={ref} {...props} />\n));\n","import React, { useState } from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport Tabs from '../../components/Tabs/Tabs';\nimport Tab from '../../components/Tab/Tab';\nimport colors from '../../theme/colors.scss';\nimport './TabView.scss';\n\nconst prefixCls = 'kai-tab-view';\n\ninterface LocalProps {\n  tabLabels: string[],\n  onChangeIndex?: (index: number) => void,\n  focusColor?: string,\n  children: any[]\n}\n\nconst TabView = React.memo<LocalProps>(\n  props => {\n    const {\n      tabLabels,\n      onChangeIndex,\n      focusColor,\n      children\n    } = props;\n\n    const [activeTab, setActiveTab] = useState(0);\n    const [isTransitionDone, setTransitionDone] = useState(true);\n\n    const tabViewTabs = `${prefixCls}-tabs`;\n    const tabViewContent = `${prefixCls}-content`;\n\n    const handleChangeIndex = tabIndex => {\n      // NOTE: Ensure you set state for tab transition first.\n      //       Otherwise you will face strange race condition bugs.\n      setTransitionDone(false);\n      setActiveTab(tabIndex);\n      if(onChangeIndex){\n        onChangeIndex(tabIndex);\n      }\n    };\n\n    const handleTransitionEnd = () => setTransitionDone(true);\n\n    const renderTabs = () => {\n      return tabLabels.map((label, i) => {\n        return (\n          <Tab\n            key={`key-${i}`}\n            label={label}\n            focusColor={(focusColor || colors.defaultFocusColor)}\n          />\n        );\n      });\n    };\n\n    const renderChildren = () => {\n      return React.Children.map(children, (child:any, i) => {\n        return React.cloneElement(child, {\n          isActive: activeTab === i && isTransitionDone,\n        });\n      });\n    };\n\n    return (\n      <div className={prefixCls}>\n        <div className={tabViewTabs}>\n          <Tabs onChangeIndex={handleChangeIndex}>\n            {renderTabs()}\n          </Tabs>\n        </div>\n\n        <div className={tabViewContent}>\n          <SwipeableViews\n            axis={'x'}\n            index={activeTab}\n            onChangeIndex={handleChangeIndex}\n            onTransitionEnd={handleTransitionEnd}\n            disabled={true}\n          >\n            {renderChildren()}\n          </SwipeableViews>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default TabView;\n","export const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);","import React from 'react';\nimport colors from '../../theme/colors.scss';\nimport { useFocus } from '../../hooks/useFocus';\n\nimport './ProgressBar.scss';\n\nconst prefixCls = 'kai-pbar';\n\ninterface LocalProps {\n  header: string;\n  type: \"download\" | \"buffer\";\n  percentage: number;\n  forwardedRef?: any;\n  focusColor?: string;\n  index?: number;\n  onFocusChange?: (index: number) => void;\n}\n\nconst ProgressBar = React.memo<LocalProps>(\n  props => {\n    const {\n      header,\n      type,\n      percentage,\n      focusColor,\n      forwardedRef,\n      index,\n      onFocusChange\n    } = props;\n\n    const handleFocusChange = isNowFocused => {\n      if (isNowFocused && onFocusChange) {\n        onFocusChange(index || 0);\n      }\n    }\n\n    const isFocused = useFocus(forwardedRef, handleFocusChange, false);\n    \n    const lineCls = `${prefixCls}-line`;\n    const barWrapperCls = `${prefixCls}-bar-wrapper`;\n    const leftFillerCls = `${prefixCls}-left-filler-${\n      isFocused ? 'focused' : 'unfocused'\n    }`;\n    const rightFillerCls = `${prefixCls}-right-filler-${type}-${\n      isFocused ? 'focused' : 'unfocused'\n    }`;\n\n    return (\n      <div\n        tabIndex={0}\n        className={prefixCls}\n        style={{ backgroundColor: isFocused ? (focusColor || colors.defaultFocusColor) : colors.white }}\n        ref={forwardedRef}\n      >\n        <span className={lineCls}>{header}</span>\n        <div className={barWrapperCls}>\n          <div\n            className={leftFillerCls}\n            style={{\n              width: `${percentage}%`,\n              backgroundColor: isFocused ? colors.grayscale20 : (focusColor || colors.defaultFocusColor),\n            }}\n          />\n          <div\n            className={rightFillerCls}\n            style={{ width: `${100 - percentage}%` }}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default React.forwardRef((props: LocalProps, ref) => (\n  <ProgressBar forwardedRef={ref} {...props} />\n));\n","import { useEffect, useState } from 'react';\n\nexport const useFocus = (ref, onFocusChanged, focusedByDefault = false) => {\n  const [isFocused, setFocused] = useState(focusedByDefault);\n\n  useEffect(\n    () => {\n      if(!ref) {\n        return;\n      }\n      \n      const component = ref.current;\n\n      const onFocus = () => {\n        setFocused(true);\n        if(onFocusChanged) {\n          onFocusChanged(true);\n        }\n      }\n      const onBlur = () =>  {\n        setFocused(false);\n        if(onFocusChanged) {\n          onFocusChanged(false);\n        }\n      }\n\n      component.addEventListener('focus', onFocus);\n      component.addEventListener('blur', onBlur);\n\n      return () => {\n        component.removeEventListener('focus', onFocus);\n        component.removeEventListener('blur', onBlur);\n      };\n    }, [ref, onFocusChanged]\n  );\n\n  return isFocused;\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useGoogleLogin } from 'react-google-login';\nimport './App.scss';\nimport CheckboxListItem from './components/CheckboxListItem/CheckboxListItem';\nimport { SoftKeyProvider } from './components/SoftKey/SoftKeyProvider';\nimport ToastContext, { ToastContextProvider } from './contexts/toastContext';\nimport taskService from './services/taskService';\nimport config from './services/config.json';\nimport ListView from './views/ListView/ListView';\nimport TabView from './views/TabView/TabView';\nimport { isLocalhost } from \"./services/helperFunctions\"\nimport ProgressBar from './components/ProgressBar/ProgressBar';\n\nfunction App() {\n\n  const [isSignedIn, setSignedIn] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n\n  const { signIn, loaded } = useGoogleLogin({\n    clientId: config.client_id,\n    onSuccess: async (rep) => {\n      await taskService.init()\n      setTaskList(await taskService.getAllTaskList())\n      setSignedIn(true)\n    },\n    isSignedIn: true,\n    // cookiePolicy:'none',\n    redirectUri: !!isLocalhost ? \"http://localhost:3000\" : \"https://grachet.github.io/kaios-google-task\",\n    onFailure: (error) => {\n      console.error(error)\n    },\n    uxMode: \"redirect\",\n    scope: 'https://www.googleapis.com/auth/tasks',\n  })\n\n  useEffect(() => {\n    !isSignedIn && loaded && signIn()\n  }, []);\n\n  const App = () => {\n    const { showToast } = useContext(ToastContext);\n    return (\n      <div className=\"App\">\n        {!taskList.length && <ProgressBar\n          header={'Fetching tasks...'}\n          percentage={30}\n          type={\"buffer\"}\n        />}\n        <SoftKeyProvider>\n          <div className=\"content\">\n            <TabView\n              tabLabels={taskList.map(list => list.title)}\n            >\n              {taskList.map((list, i) => <ListView key={i}>\n                {\n                  list.tasks.map((task, ti) => <CheckboxListItem\n                    key={ti}\n                    primary={task.title}\n                    initCheckboxVal={task.status === \"completed\"}\n                    checkboxSide=\"left\"\n                    onInputChange={(isChecked) => {\n                      taskService.updateTask({\n                        ...task,\n                        taskListId: list.id,\n                        taskId: task.id,\n                        status: isChecked ? \"completed\" : \"needsAction\"\n                      }).then(rep => {\n                        showToast(\"GTask updated\", 1000)\n                      })\n                        .catch(err => {\n                          showToast(\"Fail to update GTask\", 1000)\n                        })\n                    }}\n                  />)\n                }\n              </ListView>\n              )}\n            </TabView>\n          </div>\n        </SoftKeyProvider>\n      </div >\n    );\n  }\n\n  return (\n    <ToastContextProvider>\n      <App />\n    </ToastContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}